@page "/pistas/{pistaId}"

@using Microsoft.EntityFrameworkCore;
@using proyectoDeportiva.Areas.Identity.Data
@using proyectoDeportiva.Data
@using MudBlazor
@using System.Globalization
@using proyectoDeportiva.Components

@inject ILogger<PistasPage> Logger
@inject ApplicationDbContext _ApplicationDbContext

<MudCard Style="max-width:1000px;width:80%; margin:auto;">
    <MudCardContent>
        <h2>
            Detalles de la Pista
        </h2>
        @if (pistaUnica != null)
        {
            <MudGrid Style="display: flex; flex-direction:column; width:100%">
                <MudItem xs="12" md="6">
                    <h4>Información de la Pista</h4>
                    <MudList>
                        
                            <MudListItem>
                                <MudText class="font-weight-bold">Nombre:</MudText>
                            <MudText>@pistaUnica.Nombre</MudText>
                            </MudListItem>
                            <MudListItem>
                                <MudText class="font-weight-bold">Estado:</MudText>
                            <MudText>@pistaUnica.Estado.Nombre</MudText>
                            </MudListItem>
                            <MudListItem>
                                <MudText class="font-weight-bold">Tipo de Deporte:</MudText>
                            <MudText>@pistaUnica.TipoDeporte.Nombre</MudText>
                            </MudListItem>
                            <MudListItem>
                                <MudText class="font-weight-bold">Horario de Apertura:</MudText>
                            <MudText Format="">@pistaUnica.HorarioApertura.ToString("hh\\:mm")</MudText>
                            </MudListItem>
                            <MudListItem>
                                <MudText class="font-weight-bold">Horario de Cierre:</MudText>
                            <MudText>@pistaUnica.HorarioCierre.ToString("hh\\:mm")</MudText>
                        </MudListItem>
                            <MudListItem>
                                <MudText class="font-weight-bold">Capacidad Máxima:</MudText>
                            <MudText>@pistaUnica.CapacidadMaxima</MudText>
                            </MudListItem>
                        
                    </MudList>
                </MudItem>
                <MudItem xs="12" md="6">
                    <h4>Reserva</h4>
                    <CalendarioHora pista="pistaUnica" />
                </MudItem>
            </MudGrid>
        }
    </MudCardContent>
</MudCard>

@code {
    [Parameter]
    public string PistaId { get; set; }

    private Pista pistaUnica;
    private List<Pista> listaPistas;
    private DateTime fechaReserva = DateTime.Now;
    private TimeSpan horaReserva = TimeSpan.Zero;

    protected override async Task OnInitializedAsync()
    {
        bool bucle = true;
        while (bucle)
        {
            try
            {
                if (int.TryParse(PistaId, out var pistaId))
                {
                    listaPistas = await _ApplicationDbContext.Pistas
                        .Include(it => it.Estado)
                        .Include(it => it.TipoDeporte)
                        .Where(p => p.Id == pistaId)
                        .ToListAsync();

                    await CargaPista(pistaId);
                }
                bucle = false;
            }
            catch (InvalidOperationException e)
            {
                await Task.Delay(100);

            }
        }
        
    }


    private async Task CargaPista(int id)
    {
        pistaUnica = listaPistas.FirstOrDefault(p => p.Id == id);
    }

    // private void ActualizarFechaReserva(DateTime nuevaFecha)
    // {
    //     fechaReserva = nuevaFecha;
    // }

    // private void ActualizarHoraReserva(TimeSpan nuevaHora)
    // {
    //     horaReserva = nuevaHora;
    // }

  
}
