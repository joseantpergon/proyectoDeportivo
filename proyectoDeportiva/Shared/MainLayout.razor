@using proyectoDeportiva.Areas.Identity.Data
@using proyectoDeportiva.Data
@using proyectoDeportiva.Pages
@using MudBlazor
@using System.Globalization


@inherits LayoutComponentBase

@inject AuthenticationStateProvider _authenticationStateProvider
@inject NavigationManager _navigationManager
@inject SignInManager<User> SingInManager
@inject UserManager<User> _userManager

<PageTitle>proyectoDeportiva</PageTitle>

<MudThemeProvider />
<MudDialogProvider />
<MudSnackbarProvider />


<MudLayout>
    <NavMenu ToggleNavMenu="ToggleNavMenu" CurrentUser="@currentUser" />
   <MudDrawer @bind-Open="@IsNavMenuOpen" Elevation="1">
        <MudDrawerHeader>
            <MudText Typo="Typo.h6">Paginas</MudText>
        </MudDrawerHeader>
        <MudNavMenu >
            <MudNavLink Match="NavLinkMatch.All" Href="" Icon="@Icons.Material.Filled.Home">Home</MudNavLink>
            <MudNavLink Match="NavLinkMatch.All" Href="/pistas" Icon="@Icons.Material.Filled.EditCalendar">Reservas</MudNavLink>

            <MudNavLink Match="NavLinkMatch.All" Href="/admin" Icon="@Icons.Material.Filled.AccountBalance">Administracion</MudNavLink>

        </MudNavMenu>
    </MudDrawer>
    <MudMainContent >
        @Body
    </MudMainContent>
</MudLayout>
@code {
    private bool IsNavMenuOpen { get; set; }

    private void ToggleNavMenu()
    {
        IsNavMenuOpen = !IsNavMenuOpen;
    }

    private User currentUser;

    protected override async Task OnInitializedAsync()
    {
        await GetUser();
    }

    async Task GetUser()
    {
        var authenticationState = await _authenticationStateProvider.GetAuthenticationStateAsync();
        var user = authenticationState.User;

        if (user.Identity.IsAuthenticated)
        {
            currentUser = await _userManager.GetUserAsync(user);
        }
    }
}